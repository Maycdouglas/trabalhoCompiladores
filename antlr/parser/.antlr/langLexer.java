// Generated from e:/Windows/Projetos/trabalhoCompiladores/antlr/parser/lang.g4 by ANTLR 4.13.1

    package parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class langLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ID=1, TYID=2, INT=3, FLOAT=4, CHAR=5, TRUE=6, FALSE=7, NULL=8, ABSTRACT=9, 
		DATA=10, RETURN=11, READ=12, PRINT=13, IF=14, ELSE=15, ITERATE=16, FUN=17, 
		PLUS=18, MINUS=19, MUL=20, DIV=21, MOD=22, EQ=23, NEQ=24, LT=25, AND=26, 
		NOT=27, ASSIGN=28, DCOLON=29, COLON=30, SEMI=31, COMMA=32, DOT=33, PIPE=34, 
		ARROW=35, LPAREN=36, RPAREN=37, LBRACE=38, RBRACE=39, LBRACK=40, RBRACK=41, 
		LINE_COMMENT=42, BLOCK_COMMENT=43, WS=44;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"ID", "TYID", "INT", "FLOAT", "CHAR", "TRUE", "FALSE", "NULL", "ABSTRACT", 
			"DATA", "RETURN", "READ", "PRINT", "IF", "ELSE", "ITERATE", "FUN", "PLUS", 
			"MINUS", "MUL", "DIV", "MOD", "EQ", "NEQ", "LT", "AND", "NOT", "ASSIGN", 
			"DCOLON", "COLON", "SEMI", "COMMA", "DOT", "PIPE", "ARROW", "LPAREN", 
			"RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "LINE_COMMENT", "BLOCK_COMMENT", 
			"WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, "'true'", "'false'", "'null'", "'abstract'", 
			"'data'", "'return'", "'read'", "'print'", "'if'", "'else'", "'iterate'", 
			"'fun'", "'+'", "'-'", "'*'", "'/'", "'%'", "'=='", "'!='", "'<'", "'&&'", 
			"'!'", "'='", "'::'", "':'", "';'", "','", "'.'", "'|'", "'->'", "'('", 
			"')'", "'{'", "'}'", "'['", "']'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ID", "TYID", "INT", "FLOAT", "CHAR", "TRUE", "FALSE", "NULL", 
			"ABSTRACT", "DATA", "RETURN", "READ", "PRINT", "IF", "ELSE", "ITERATE", 
			"FUN", "PLUS", "MINUS", "MUL", "DIV", "MOD", "EQ", "NEQ", "LT", "AND", 
			"NOT", "ASSIGN", "DCOLON", "COLON", "SEMI", "COMMA", "DOT", "PIPE", "ARROW", 
			"LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "LINE_COMMENT", 
			"BLOCK_COMMENT", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public langLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "lang.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000,\u0121\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0001\u0000\u0001\u0000\u0005\u0000\\\b\u0000\n\u0000\f\u0000_\t\u0000"+
		"\u0001\u0001\u0001\u0001\u0005\u0001c\b\u0001\n\u0001\f\u0001f\t\u0001"+
		"\u0001\u0002\u0004\u0002i\b\u0002\u000b\u0002\f\u0002j\u0001\u0003\u0005"+
		"\u0003n\b\u0003\n\u0003\f\u0003q\t\u0003\u0001\u0003\u0001\u0003\u0004"+
		"\u0003u\b\u0003\u000b\u0003\f\u0003v\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0003\u0004\u0080\b\u0004"+
		"\u0001\u0004\u0003\u0004\u0083\b\u0004\u0003\u0004\u0085\b\u0004\u0001"+
		"\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001"+
		"\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r"+
		"\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001"+
		"\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001"+
		"\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001"+
		"\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001!\u0001"+
		"!\u0001\"\u0001\"\u0001\"\u0001#\u0001#\u0001$\u0001$\u0001%\u0001%\u0001"+
		"&\u0001&\u0001\'\u0001\'\u0001(\u0001(\u0001)\u0001)\u0001)\u0001)\u0005"+
		")\u0106\b)\n)\f)\u0109\t)\u0001)\u0001)\u0001*\u0001*\u0001*\u0001*\u0005"+
		"*\u0111\b*\n*\f*\u0114\t*\u0001*\u0001*\u0001*\u0001*\u0001*\u0001+\u0004"+
		"+\u011c\b+\u000b+\f+\u011d\u0001+\u0001+\u0001\u0112\u0000,\u0001\u0001"+
		"\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f"+
		"\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f"+
		"\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u0018"+
		"1\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f? A!C\"E#G$I%K&M\'O("+
		"Q)S*U+W,\u0001\u0000\b\u0001\u0000az\u0004\u000009AZ__az\u0001\u0000A"+
		"Z\u0001\u000009\u0004\u0000\n\n\r\r\'\'\\\\\u0006\u0000\'\'\\\\bbnnrr"+
		"tt\u0002\u0000\n\n\r\r\u0003\u0000\t\n\r\r  \u012c\u0000\u0001\u0001\u0000"+
		"\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000"+
		"\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000"+
		"\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000"+
		"\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000"+
		"\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000"+
		"\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000"+
		"\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000"+
		"\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000"+
		"#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001"+
		"\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000"+
		"\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0000"+
		"1\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001"+
		"\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000"+
		"\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000"+
		"?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001"+
		"\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000"+
		"\u0000\u0000I\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000"+
		"M\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001"+
		"\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0000U\u0001\u0000\u0000"+
		"\u0000\u0000W\u0001\u0000\u0000\u0000\u0001Y\u0001\u0000\u0000\u0000\u0003"+
		"`\u0001\u0000\u0000\u0000\u0005h\u0001\u0000\u0000\u0000\u0007o\u0001"+
		"\u0000\u0000\u0000\tx\u0001\u0000\u0000\u0000\u000b\u0088\u0001\u0000"+
		"\u0000\u0000\r\u008d\u0001\u0000\u0000\u0000\u000f\u0093\u0001\u0000\u0000"+
		"\u0000\u0011\u0098\u0001\u0000\u0000\u0000\u0013\u00a1\u0001\u0000\u0000"+
		"\u0000\u0015\u00a6\u0001\u0000\u0000\u0000\u0017\u00ad\u0001\u0000\u0000"+
		"\u0000\u0019\u00b2\u0001\u0000\u0000\u0000\u001b\u00b8\u0001\u0000\u0000"+
		"\u0000\u001d\u00bb\u0001\u0000\u0000\u0000\u001f\u00c0\u0001\u0000\u0000"+
		"\u0000!\u00c8\u0001\u0000\u0000\u0000#\u00cc\u0001\u0000\u0000\u0000%"+
		"\u00ce\u0001\u0000\u0000\u0000\'\u00d0\u0001\u0000\u0000\u0000)\u00d2"+
		"\u0001\u0000\u0000\u0000+\u00d4\u0001\u0000\u0000\u0000-\u00d6\u0001\u0000"+
		"\u0000\u0000/\u00d9\u0001\u0000\u0000\u00001\u00dc\u0001\u0000\u0000\u0000"+
		"3\u00de\u0001\u0000\u0000\u00005\u00e1\u0001\u0000\u0000\u00007\u00e3"+
		"\u0001\u0000\u0000\u00009\u00e5\u0001\u0000\u0000\u0000;\u00e8\u0001\u0000"+
		"\u0000\u0000=\u00ea\u0001\u0000\u0000\u0000?\u00ec\u0001\u0000\u0000\u0000"+
		"A\u00ee\u0001\u0000\u0000\u0000C\u00f0\u0001\u0000\u0000\u0000E\u00f2"+
		"\u0001\u0000\u0000\u0000G\u00f5\u0001\u0000\u0000\u0000I\u00f7\u0001\u0000"+
		"\u0000\u0000K\u00f9\u0001\u0000\u0000\u0000M\u00fb\u0001\u0000\u0000\u0000"+
		"O\u00fd\u0001\u0000\u0000\u0000Q\u00ff\u0001\u0000\u0000\u0000S\u0101"+
		"\u0001\u0000\u0000\u0000U\u010c\u0001\u0000\u0000\u0000W\u011b\u0001\u0000"+
		"\u0000\u0000Y]\u0007\u0000\u0000\u0000Z\\\u0007\u0001\u0000\u0000[Z\u0001"+
		"\u0000\u0000\u0000\\_\u0001\u0000\u0000\u0000][\u0001\u0000\u0000\u0000"+
		"]^\u0001\u0000\u0000\u0000^\u0002\u0001\u0000\u0000\u0000_]\u0001\u0000"+
		"\u0000\u0000`d\u0007\u0002\u0000\u0000ac\u0007\u0001\u0000\u0000ba\u0001"+
		"\u0000\u0000\u0000cf\u0001\u0000\u0000\u0000db\u0001\u0000\u0000\u0000"+
		"de\u0001\u0000\u0000\u0000e\u0004\u0001\u0000\u0000\u0000fd\u0001\u0000"+
		"\u0000\u0000gi\u0007\u0003\u0000\u0000hg\u0001\u0000\u0000\u0000ij\u0001"+
		"\u0000\u0000\u0000jh\u0001\u0000\u0000\u0000jk\u0001\u0000\u0000\u0000"+
		"k\u0006\u0001\u0000\u0000\u0000ln\u0007\u0003\u0000\u0000ml\u0001\u0000"+
		"\u0000\u0000nq\u0001\u0000\u0000\u0000om\u0001\u0000\u0000\u0000op\u0001"+
		"\u0000\u0000\u0000pr\u0001\u0000\u0000\u0000qo\u0001\u0000\u0000\u0000"+
		"rt\u0005.\u0000\u0000su\u0007\u0003\u0000\u0000ts\u0001\u0000\u0000\u0000"+
		"uv\u0001\u0000\u0000\u0000vt\u0001\u0000\u0000\u0000vw\u0001\u0000\u0000"+
		"\u0000w\b\u0001\u0000\u0000\u0000x\u0084\u0005\'\u0000\u0000y\u0085\b"+
		"\u0004\u0000\u0000z{\u0005\\\u0000\u0000{\u0085\u0007\u0005\u0000\u0000"+
		"|}\u0005\\\u0000\u0000}\u007f\u0007\u0003\u0000\u0000~\u0080\u0007\u0003"+
		"\u0000\u0000\u007f~\u0001\u0000\u0000\u0000\u007f\u0080\u0001\u0000\u0000"+
		"\u0000\u0080\u0082\u0001\u0000\u0000\u0000\u0081\u0083\u0007\u0003\u0000"+
		"\u0000\u0082\u0081\u0001\u0000\u0000\u0000\u0082\u0083\u0001\u0000\u0000"+
		"\u0000\u0083\u0085\u0001\u0000\u0000\u0000\u0084y\u0001\u0000\u0000\u0000"+
		"\u0084z\u0001\u0000\u0000\u0000\u0084|\u0001\u0000\u0000\u0000\u0085\u0086"+
		"\u0001\u0000\u0000\u0000\u0086\u0087\u0005\'\u0000\u0000\u0087\n\u0001"+
		"\u0000\u0000\u0000\u0088\u0089\u0005t\u0000\u0000\u0089\u008a\u0005r\u0000"+
		"\u0000\u008a\u008b\u0005u\u0000\u0000\u008b\u008c\u0005e\u0000\u0000\u008c"+
		"\f\u0001\u0000\u0000\u0000\u008d\u008e\u0005f\u0000\u0000\u008e\u008f"+
		"\u0005a\u0000\u0000\u008f\u0090\u0005l\u0000\u0000\u0090\u0091\u0005s"+
		"\u0000\u0000\u0091\u0092\u0005e\u0000\u0000\u0092\u000e\u0001\u0000\u0000"+
		"\u0000\u0093\u0094\u0005n\u0000\u0000\u0094\u0095\u0005u\u0000\u0000\u0095"+
		"\u0096\u0005l\u0000\u0000\u0096\u0097\u0005l\u0000\u0000\u0097\u0010\u0001"+
		"\u0000\u0000\u0000\u0098\u0099\u0005a\u0000\u0000\u0099\u009a\u0005b\u0000"+
		"\u0000\u009a\u009b\u0005s\u0000\u0000\u009b\u009c\u0005t\u0000\u0000\u009c"+
		"\u009d\u0005r\u0000\u0000\u009d\u009e\u0005a\u0000\u0000\u009e\u009f\u0005"+
		"c\u0000\u0000\u009f\u00a0\u0005t\u0000\u0000\u00a0\u0012\u0001\u0000\u0000"+
		"\u0000\u00a1\u00a2\u0005d\u0000\u0000\u00a2\u00a3\u0005a\u0000\u0000\u00a3"+
		"\u00a4\u0005t\u0000\u0000\u00a4\u00a5\u0005a\u0000\u0000\u00a5\u0014\u0001"+
		"\u0000\u0000\u0000\u00a6\u00a7\u0005r\u0000\u0000\u00a7\u00a8\u0005e\u0000"+
		"\u0000\u00a8\u00a9\u0005t\u0000\u0000\u00a9\u00aa\u0005u\u0000\u0000\u00aa"+
		"\u00ab\u0005r\u0000\u0000\u00ab\u00ac\u0005n\u0000\u0000\u00ac\u0016\u0001"+
		"\u0000\u0000\u0000\u00ad\u00ae\u0005r\u0000\u0000\u00ae\u00af\u0005e\u0000"+
		"\u0000\u00af\u00b0\u0005a\u0000\u0000\u00b0\u00b1\u0005d\u0000\u0000\u00b1"+
		"\u0018\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005p\u0000\u0000\u00b3\u00b4"+
		"\u0005r\u0000\u0000\u00b4\u00b5\u0005i\u0000\u0000\u00b5\u00b6\u0005n"+
		"\u0000\u0000\u00b6\u00b7\u0005t\u0000\u0000\u00b7\u001a\u0001\u0000\u0000"+
		"\u0000\u00b8\u00b9\u0005i\u0000\u0000\u00b9\u00ba\u0005f\u0000\u0000\u00ba"+
		"\u001c\u0001\u0000\u0000\u0000\u00bb\u00bc\u0005e\u0000\u0000\u00bc\u00bd"+
		"\u0005l\u0000\u0000\u00bd\u00be\u0005s\u0000\u0000\u00be\u00bf\u0005e"+
		"\u0000\u0000\u00bf\u001e\u0001\u0000\u0000\u0000\u00c0\u00c1\u0005i\u0000"+
		"\u0000\u00c1\u00c2\u0005t\u0000\u0000\u00c2\u00c3\u0005e\u0000\u0000\u00c3"+
		"\u00c4\u0005r\u0000\u0000\u00c4\u00c5\u0005a\u0000\u0000\u00c5\u00c6\u0005"+
		"t\u0000\u0000\u00c6\u00c7\u0005e\u0000\u0000\u00c7 \u0001\u0000\u0000"+
		"\u0000\u00c8\u00c9\u0005f\u0000\u0000\u00c9\u00ca\u0005u\u0000\u0000\u00ca"+
		"\u00cb\u0005n\u0000\u0000\u00cb\"\u0001\u0000\u0000\u0000\u00cc\u00cd"+
		"\u0005+\u0000\u0000\u00cd$\u0001\u0000\u0000\u0000\u00ce\u00cf\u0005-"+
		"\u0000\u0000\u00cf&\u0001\u0000\u0000\u0000\u00d0\u00d1\u0005*\u0000\u0000"+
		"\u00d1(\u0001\u0000\u0000\u0000\u00d2\u00d3\u0005/\u0000\u0000\u00d3*"+
		"\u0001\u0000\u0000\u0000\u00d4\u00d5\u0005%\u0000\u0000\u00d5,\u0001\u0000"+
		"\u0000\u0000\u00d6\u00d7\u0005=\u0000\u0000\u00d7\u00d8\u0005=\u0000\u0000"+
		"\u00d8.\u0001\u0000\u0000\u0000\u00d9\u00da\u0005!\u0000\u0000\u00da\u00db"+
		"\u0005=\u0000\u0000\u00db0\u0001\u0000\u0000\u0000\u00dc\u00dd\u0005<"+
		"\u0000\u0000\u00dd2\u0001\u0000\u0000\u0000\u00de\u00df\u0005&\u0000\u0000"+
		"\u00df\u00e0\u0005&\u0000\u0000\u00e04\u0001\u0000\u0000\u0000\u00e1\u00e2"+
		"\u0005!\u0000\u0000\u00e26\u0001\u0000\u0000\u0000\u00e3\u00e4\u0005="+
		"\u0000\u0000\u00e48\u0001\u0000\u0000\u0000\u00e5\u00e6\u0005:\u0000\u0000"+
		"\u00e6\u00e7\u0005:\u0000\u0000\u00e7:\u0001\u0000\u0000\u0000\u00e8\u00e9"+
		"\u0005:\u0000\u0000\u00e9<\u0001\u0000\u0000\u0000\u00ea\u00eb\u0005;"+
		"\u0000\u0000\u00eb>\u0001\u0000\u0000\u0000\u00ec\u00ed\u0005,\u0000\u0000"+
		"\u00ed@\u0001\u0000\u0000\u0000\u00ee\u00ef\u0005.\u0000\u0000\u00efB"+
		"\u0001\u0000\u0000\u0000\u00f0\u00f1\u0005|\u0000\u0000\u00f1D\u0001\u0000"+
		"\u0000\u0000\u00f2\u00f3\u0005-\u0000\u0000\u00f3\u00f4\u0005>\u0000\u0000"+
		"\u00f4F\u0001\u0000\u0000\u0000\u00f5\u00f6\u0005(\u0000\u0000\u00f6H"+
		"\u0001\u0000\u0000\u0000\u00f7\u00f8\u0005)\u0000\u0000\u00f8J\u0001\u0000"+
		"\u0000\u0000\u00f9\u00fa\u0005{\u0000\u0000\u00faL\u0001\u0000\u0000\u0000"+
		"\u00fb\u00fc\u0005}\u0000\u0000\u00fcN\u0001\u0000\u0000\u0000\u00fd\u00fe"+
		"\u0005[\u0000\u0000\u00feP\u0001\u0000\u0000\u0000\u00ff\u0100\u0005]"+
		"\u0000\u0000\u0100R\u0001\u0000\u0000\u0000\u0101\u0102\u0005-\u0000\u0000"+
		"\u0102\u0103\u0005-\u0000\u0000\u0103\u0107\u0001\u0000\u0000\u0000\u0104"+
		"\u0106\b\u0006\u0000\u0000\u0105\u0104\u0001\u0000\u0000\u0000\u0106\u0109"+
		"\u0001\u0000\u0000\u0000\u0107\u0105\u0001\u0000\u0000\u0000\u0107\u0108"+
		"\u0001\u0000\u0000\u0000\u0108\u010a\u0001\u0000\u0000\u0000\u0109\u0107"+
		"\u0001\u0000\u0000\u0000\u010a\u010b\u0006)\u0000\u0000\u010bT\u0001\u0000"+
		"\u0000\u0000\u010c\u010d\u0005{\u0000\u0000\u010d\u010e\u0005-\u0000\u0000"+
		"\u010e\u0112\u0001\u0000\u0000\u0000\u010f\u0111\t\u0000\u0000\u0000\u0110"+
		"\u010f\u0001\u0000\u0000\u0000\u0111\u0114\u0001\u0000\u0000\u0000\u0112"+
		"\u0113\u0001\u0000\u0000\u0000\u0112\u0110\u0001\u0000\u0000\u0000\u0113"+
		"\u0115\u0001\u0000\u0000\u0000\u0114\u0112\u0001\u0000\u0000\u0000\u0115"+
		"\u0116\u0005-\u0000\u0000\u0116\u0117\u0005}\u0000\u0000\u0117\u0118\u0001"+
		"\u0000\u0000\u0000\u0118\u0119\u0006*\u0000\u0000\u0119V\u0001\u0000\u0000"+
		"\u0000\u011a\u011c\u0007\u0007\u0000\u0000\u011b\u011a\u0001\u0000\u0000"+
		"\u0000\u011c\u011d\u0001\u0000\u0000\u0000\u011d\u011b\u0001\u0000\u0000"+
		"\u0000\u011d\u011e\u0001\u0000\u0000\u0000\u011e\u011f\u0001\u0000\u0000"+
		"\u0000\u011f\u0120\u0006+\u0000\u0000\u0120X\u0001\u0000\u0000\u0000\f"+
		"\u0000]djov\u007f\u0082\u0084\u0107\u0112\u011d\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}