abstract data Racional {
     numerador :: Int;
     denominador :: Int;

     -- Funções para modificar (setters) e acessar (getters) os campos
     -- Elas recebem a instância 'r' como primeiro parâmetro
     setNumerador(r :: Racional, value :: Int) {
         r.numerador = value;
     }

     setDenominador(r :: Racional, value :: Int) {
         r.denominador = value;
     }

     getNumerador(r :: Racional) : Int {
         return r.numerador;
     }

     getDenominador(r :: Racional) : Int {
         return r.denominador;
     }

     -- A função de adição permanece a mesma
     add(r1 :: Racional, r2 :: Racional) : Racional {
         r = new Racional;
         r.numerador = r1.numerador * r2.denominador + r2.numerador * r1.denominador;
         r.denominador = r1.denominador * r2.denominador;
         return r;
     }
}

main() {
     -- Criando e inicializando o primeiro número racional
     r1 = new Racional;
     setNumerador(r1, 1);
     setDenominador(r1, 2); -- r1 é 1/2

     -- Criando e inicializando o segundo número racional
     r2 = new Racional;
     setNumerador(r2, 1);
     setDenominador(r2, 3); -- r2 é 1/3

     -- Somando os dois racionais. Note o índice [0] obrigatório.
     r3 = add(r1, r2)[0];

     -- Obtendo os valores do resultado para impressão. Note o índice [0].
     num = getNumerador(r3)[0];
     den = getDenominador(r3)[0];
     
     print num; -- Esperado: 5
     print '/';
     print den; -- Esperado: 6
     print '\n';
}